/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;
import java.sql.Statement;

/**
 *
 * @author gamei
 */
public class materias extends javax.swing.JFrame {

    /**
     * Creates new form materias
     */
    public static final String url = "jdbc:mysql://localhost:3306/est";
    public static final String usuario = "root";
    public static final String contraseña = "123456";
    static Statement st;
    static DefaultTableModel modelo;

    public materias() {
        initComponents();
    }

    public void cargarTabla() {
        try {
            Connection count = null;
            Connection c = null;
            count = getConection();
            st = count.createStatement();
            String[] registro = new String[6];
            modelo = (DefaultTableModel) tdatos.getModel();

            //PreparedStatement var;//preparar los resultados de la base de datos
            ResultSet rest;//mostrar los resultados de la base de datos 
            //var = count.prepareStatement("SELECT * FROM estudiantes");
            String sql = "SELECT * FROM estudiantes";
            rest = st.executeQuery(sql);
            while (rest.next()) {
                registro[0] = rest.getString("idEstudiante");
                registro[1] = rest.getString("ProgramacionIII");
                registro[2] = rest.getString("CalculoIntegral");
                registro[3] = rest.getString("CatedraInstitucional");
                registro[4] = rest.getString("TeoriadeSistemas");
                registro[5] = rest.getString("total");
                modelo.addRow(registro);
            }
            tdatos.setModel(modelo);
            count.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void cargartablabd() {
        try {
            Connection count = null;
            count = getConection();
            st = count.createStatement();
            String[] registro = new String[3];
            modelo = (DefaultTableModel) tbd.getModel();
            ResultSet rest;//mostrar los resultados de la base de datos 
            String sql = "SELECT * FROM estudiantes";
            rest = st.executeQuery(sql);
            while (rest.next()) {
                registro[0] = rest.getString("idEstudiante");
                registro[1] = rest.getString("nombre");
                registro[2] = rest.getString("apellido");
                modelo.addRow(registro);
            }
            tbd.setModel(modelo);
            count.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tdatos = new javax.swing.JTable();
        btnnotas = new javax.swing.JButton();
        btnmodificar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtnombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtapellido = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt1parcial = new javax.swing.JTextField();
        txt2parcial = new javax.swing.JTextField();
        txtexamen = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtcodigo = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        lstmateria = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbd = new javax.swing.JTable();
        btnActualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tdatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Programacion III", "Calculo Integral", "Catedra Institucional", "Teoría de Sistemas", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tdatos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane2.setViewportView(tdatos);

        btnnotas.setText("Ingresar notas");
        btnnotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnotasActionPerformed(evt);
            }
        });

        btnmodificar.setText("Modificar");
        btnmodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodificarActionPerformed(evt);
            }
        });

        jButton3.setText("Eliminar");

        jLabel1.setText("Nombre");

        jLabel2.setText("Apellido");

        txtapellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtapellidoActionPerformed(evt);
            }
        });

        jLabel3.setText("1er Parcial");

        jLabel4.setText("2do Parcial");

        jLabel5.setText("Examen Final");

        jLabel6.setText("Codigo");

        txtcodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcodigoActionPerformed(evt);
            }
        });

        jButton5.setText("Ingresar Estudiante");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        lstmateria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Programación III", "Calculo Integral", "Catedra Institucional", "Teoría de Sistemas" }));
        lstmateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lstmateriaActionPerformed(evt);
            }
        });

        jLabel7.setText("Materias");

        tbd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Apellido"
            }
        ));
        tbd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbdMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbd);

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addGap(95, 95, 95)
                                .addComponent(jLabel7))
                            .addComponent(txtapellido, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(txt1parcial, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59)
                                .addComponent(txt2parcial, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(69, 69, 69)
                                .addComponent(txtexamen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70)
                                .addComponent(lstmateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnActualizar)
                                .addGap(18, 18, 18)
                                .addComponent(jButton5)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnmodificar)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnnotas)
                        .addGap(15, 15, 15)))
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtapellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5)
                    .addComponent(btnActualizar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt1parcial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt2parcial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtexamen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lstmateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnmodificar)
                    .addComponent(jButton3)
                    .addComponent(btnnotas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public static Connection getConection() {
        Connection conexion = null;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");//link desde netbeancos hacia mysql
            conexion = (Connection) DriverManager.getConnection(url, usuario, contraseña);//trae los datos de acceso de conexion de la base de datos
            //JOptionPane.showMessageDialog(null, "Conexion exitosa");
        } catch (Exception e) {
            System.out.println(e);
        }
        return conexion;
    }
    private void txtapellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtapellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtapellidoActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            Connection count = null;
            count = getConection();
            PreparedStatement var;//preparar los resultados de la base de datos
            //ResultSet rest;//mostrar los resultados de la base de datos 
            var = count.prepareStatement("INSERT INTO estudiantes (nombre,apellido,ProgramacionIII,CalculoIntegral,CatedraInstitucional,TeoriadeSistemas,total) values (?,?,?,?,?,?,?)");
            var.setString(1, txtnombre.getText());
            var.setString(2, txtapellido.getText());
            var.setInt(3, 0);
            var.setInt(4, 0);
            var.setInt(5, 0);
            var.setInt(6, 0);
            var.setInt(7, 0);
            var.executeUpdate();
            //JOptionPane.showMessageDialog(null, "Datos guardados");
            //rest = var.executeQuery();

            count.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void btnnotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnotasActionPerformed
        String opcion = lstmateria.getSelectedItem().toString();
        if (opcion.equals("Programación III")) {
            try {
                Connection count = null;
                count = getConection();
                PreparedStatement var;//preparar los resultados de la base de datos
                var = count.prepareStatement("UPDATE estudiantes SET ProgramacionIII =(?) WHERE nombre =(?)");
                //materias materia = new materias();
                int a = Integer.parseInt(txt1parcial.getText());
                int b = Integer.parseInt(txt2parcial.getText());
                int c = Integer.parseInt(txtexamen.getText());
                int total = (a + b + c) / 3;
                var.setInt(1, total);
                var.setString(2, txtnombre.getText());
                var.executeUpdate();
                JOptionPane.showMessageDialog(null, "Datos guardados");
                limpiarnotas();
                count.close();
            } catch (Exception e) {
                System.out.println(e);
            }
        } else if (opcion.equals("Calculo Integral")) {
            try {
                Connection count = null;
                count = getConection();
                PreparedStatement var;//preparar los resultados de la base de datos
                var = count.prepareStatement("UPDATE estudiantes SET CalculoIntegral =(?) WHERE nombre =(?)");
                //materias materia = new materias();
                int a = Integer.parseInt(txt1parcial.getText());
                int b = Integer.parseInt(txt2parcial.getText());
                int c = Integer.parseInt(txtexamen.getText());
                int total = (a + b + c) / 3;
                var.setInt(1, total);
                var.setString(2, txtnombre.getText());
                var.executeUpdate();
                JOptionPane.showMessageDialog(null, "Datos guardados");
                limpiarnotas();
                count.close();
            } catch (Exception e) {
                System.out.println(e);
            }
        } else if (opcion.equals("Catedra Institucional")) {
            try {
                Connection count = null;
                count = getConection();
                PreparedStatement var;//preparar los resultados de la base de datos
                var = count.prepareStatement("UPDATE estudiantes SET CatedraInstitucional =(?) WHERE nombre =(?)");

                int a = Integer.parseInt(txt1parcial.getText());
                int b = Integer.parseInt(txt2parcial.getText());
                int c = Integer.parseInt(txtexamen.getText());
                int total = (a + b + c) / 3;
                var.setInt(1, total);
                var.setString(2, txtnombre.getText());
                var.executeUpdate();
                JOptionPane.showMessageDialog(null, "Datos guardados");
                limpiarnotas();
                count.close();
            } catch (Exception e) {
                System.out.println(e);
            }
        } else if (opcion.equals("Teoría de Sistemas")) {
            try {
                Connection count = null;
                count = getConection();
                PreparedStatement var;//preparar los resultados de la base de datos
                var = count.prepareStatement("UPDATE estudiantes SET TeoriadeSistemas =(?) WHERE nombre =(?)");
                //materias materia = new materias();
                int a = Integer.parseInt(txt1parcial.getText());
                int b = Integer.parseInt(txt2parcial.getText());
                int c = Integer.parseInt(txtexamen.getText());
                int total = (a + b + c) / 3;
                var.setInt(1, total);
                var.setString(2, txtnombre.getText());
                var.executeUpdate();
                JOptionPane.showMessageDialog(null, "Datos guardados");
                limpiarnotas();
                count.close();
            } catch (Exception e) {
                System.out.println(e);
            }

        }
        limpiartabla();
        cargarTabla();
    }//GEN-LAST:event_btnnotasActionPerformed

    private void lstmateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lstmateriaActionPerformed

    }//GEN-LAST:event_lstmateriaActionPerformed

    private void txtcodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcodigoActionPerformed
        try {
            Connection count = null;
            count = getConection();
            PreparedStatement var;//preparar los resultados de la base de datos
            //ResultSet rest;//mostrar los resultados de la base de datos 
            var = count.prepareStatement("SELECT estudiantes FROM nombre values (?,?,?,?,?,?,?)");
            var.setString(1, txtnombre.getText());
            var.setString(2, txtapellido.getText());
            var.setInt(3, 0);
            var.setInt(4, 0);
            var.setInt(5, 0);
            var.setInt(6, 0);
            var.setInt(7, 0);
            var.executeUpdate();
            JOptionPane.showMessageDialog(null, "Datos guardados");
            //rest = var.executeQuery();

            count.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_txtcodigoActionPerformed

    private void tbdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbdMouseClicked
        //int fila = this.tbd.getSelectedRow();
        this.txtcodigo.setText(tbd.getValueAt(tbd.getSelectedRow(), 0).toString());
        this.txtnombre.setText(tbd.getValueAt(tbd.getSelectedRow(), 1).toString());
        this.txtapellido.setText(tbd.getValueAt(tbd.getSelectedRow(), 2).toString());
    }//GEN-LAST:event_tbdMouseClicked

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        limpiartablabd();
        cargartablabd();
        cargarTabla();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnmodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodificarActionPerformed
        String opcion = lstmateria.getSelectedItem().toString();
        if (opcion.equals("Programación III")) {
            try {
                Connection count = null;
                count = getConection();
                PreparedStatement var;//preparar los resultados de la base de datos
                var = count.prepareStatement("UPDATE estudiantes SET ProgramacionIII =(?) WHERE nombre =(?)");
                //materias materia = new materias();
                int a = Integer.parseInt(txt1parcial.getText());
                int b = Integer.parseInt(txt2parcial.getText());
                int c = Integer.parseInt(txtexamen.getText());
                int total = (a + b + c) / 3;
                var.setInt(1, total);
                var.setString(2, txtnombre.getText());
                var.executeUpdate();
                JOptionPane.showMessageDialog(null, "Datos guardados");
                limpiarnotas();
                count.close();
            } catch (Exception e) {
                System.out.println(e);
            }
        } else if (opcion.equals("Calculo Integral")) {
            try {
                Connection count = null;
                count = getConection();
                PreparedStatement var;//preparar los resultados de la base de datos
                var = count.prepareStatement("UPDATE estudiantes SET CalculoIntegral =(?) WHERE nombre =(?)");
                //materias materia = new materias();
                int a = Integer.parseInt(txt1parcial.getText());
                int b = Integer.parseInt(txt2parcial.getText());
                int c = Integer.parseInt(txtexamen.getText());
                int total = (a + b + c) / 3;
                var.setInt(1, total);
                var.setString(2, txtnombre.getText());
                var.executeUpdate();
                JOptionPane.showMessageDialog(null, "Datos guardados");
                limpiarnotas();
                count.close();
            } catch (Exception e) {
                System.out.println(e);
            }
        } else if (opcion.equals("Catedra Institucional")) {
            try {
                Connection count = null;
                count = getConection();
                PreparedStatement var;//preparar los resultados de la base de datos
                var = count.prepareStatement("UPDATE estudiantes SET CatedraInstitucional =(?) WHERE nombre =(?)");

                int a = Integer.parseInt(txt1parcial.getText());
                int b = Integer.parseInt(txt2parcial.getText());
                int c = Integer.parseInt(txtexamen.getText());
                int total = (a + b + c) / 3;
                var.setInt(1, total);
                var.setString(2, txtnombre.getText());
                var.executeUpdate();
                JOptionPane.showMessageDialog(null, "Datos guardados");
                limpiarnotas();
                count.close();
            } catch (Exception e) {
                System.out.println(e);
            }
        } else if (opcion.equals("Teoría de Sistemas")) {
            try {
                Connection count = null;
                count = getConection();
                PreparedStatement var;//preparar los resultados de la base de datos
                var = count.prepareStatement("UPDATE estudiantes SET TeoriadeSistemas =(?) WHERE nombre =(?)");
                //materias materia = new materias();
                int a = Integer.parseInt(txt1parcial.getText());
                int b = Integer.parseInt(txt2parcial.getText());
                int c = Integer.parseInt(txtexamen.getText());
                int total = (a + b + c) / 3;
                var.setInt(1, total);
                var.setString(2, txtnombre.getText());
                var.executeUpdate();
                JOptionPane.showMessageDialog(null, "Datos guardados");
                limpiarnotas();
                count.close();
            } catch (Exception e) {
                System.out.println(e);
            }

        }
        limpiartabla();
        cargarTabla();
    }//GEN-LAST:event_btnmodificarActionPerformed

    /**
     * @param args the command line arguments
     */
    public void limpiartabla() {
        for (int i = 0; i < tdatos.getRowCount(); i++) {
            modelo.removeRow(i);
            i -= 1;
        }
    }

    public void limpiartablabd() {
        for (int i = 0; i < tbd.getRowCount(); i++) {
            modelo.removeRow(i);
            i -= 1;
        }
    }

    public void limpiarnotas() {
        this.txt1parcial.setText("");
        this.txt2parcial.setText("");
        this.txtexamen.setText("");
    }

    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new materias().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnmodificar;
    private javax.swing.JButton btnnotas;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox<String> lstmateria;
    private javax.swing.JTable tbd;
    private javax.swing.JTable tdatos;
    private javax.swing.JTextField txt1parcial;
    private javax.swing.JTextField txt2parcial;
    private javax.swing.JTextField txtapellido;
    private javax.swing.JTextField txtcodigo;
    private javax.swing.JTextField txtexamen;
    private javax.swing.JTextField txtnombre;
    // End of variables declaration//GEN-END:variables
}
